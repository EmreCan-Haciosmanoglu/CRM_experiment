name: Assign Label on Merge

on:
  pull_request:
    types: [closed]

jobs:
  assign-label-on-merge:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    permissions:
      issues: write
      pull-requests: write

    steps:
      - name: Check out the code
        uses: actions/checkout@v4

      - name: Assign Label to PR
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.CRM_PULL_REQUEST_TOKEN }}
          script: |
            github.rest.issues.addLabels({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              labels: ['done']
            })

      - name: Remove 'development' Label from PR
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.CRM_PULL_REQUEST_TOKEN }}
          script: |
            github.rest.issues.removeLabel({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              name: 'development'
            })

      - name: Find Connected Issue
        id: find_issue
        run: |
          # Extract the connected issue number from the pull request body
          connected_issue=$(jq --raw-output '.pull_request.body' <<< "${{ toJson(github.event) }}" | grep -o '#[0-9]\+' | head -n 1 | tr -d '#')
          # Debug output to verify the connected issue number
          echo "Connected Issue Number: $connected_issue"
          # Set the connected issue number as an output
          echo "::set-output name=issue_number::$connected_issue" 
        shell: bash

      - name: Assign Label to Issue
        if: steps.find_issue.outputs.issue_number
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.CRM_PULL_REQUEST_TOKEN }}
          script: |
            const issueNumber = context.payload.pull_request.body.match(/#\d+/)[0].substring(1);
            console.log("Assigning label 'done' to issue:", issueNumber);
            await github.issues.addLabels({
              issue_number: issueNumber,
              owner: context.repo.owner,
              repo: context.repo.repo,
              labels: ['done']
            });

      - name: Remove 'development' Label from Issue
        if: steps.find_issue.outputs.issue_number
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.CRM_PULL_REQUEST_TOKEN }}
          script: |
            const issueNumber = context.payload.pull_request.body.match(/#\d+/)[0].substring(1);
            console.log("Removing label 'development' from issue:", issueNumber);
            await github.issues.removeLabel({
              issue_number: issueNumber,
              owner: context.repo.owner,
              repo: context.repo.repo,
              name: 'development'
            });


